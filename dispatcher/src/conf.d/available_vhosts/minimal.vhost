#
# This is the default publish virtualhost definition for Apache. 
#
# DO NOT EDIT this file, your changes will have no impact on your deployment.
#
# Instead create a copy in the folder conf.d/available_vhosts and edit the copy.
# Finally, change to the directory conf.d/enabled_vhosts, remove the symbolic
# link for default.vhost and create a symbolic link to your copy.
#

# Include customer defined variables
Include conf.d/variables/custom.vars

<VirtualHost *:80>
	ServerName	"publish"
	# Put names of which domains are used for your published site/content here
	ServerAlias	 "*"
	# Use a document root that matches the one in conf.dispatcher.d/default.farm
	DocumentRoot "${DOCROOT}"
	# URI dereferencing algorithm is applied at Sling's level, do not decode parameters here
	AllowEncodedSlashes NoDecode
	# Add header breadcrumbs for help in troubleshooting
	<IfModule mod_headers.c>
		Header add X-Vhost "publish"
	
		################## Start of the CORS specific configuration ##################

		SetEnvIfExpr "req_novary('Origin') == ''"  CORSType=none CORSProcessing=false
		SetEnvIfExpr "req_novary('Origin') != ''"  CORSType=cors CORSProcessing=true CORSTrusted=false

		#SetEnvIfExpr "req_novary('Access-Control-Request-Method') == '' && %{REQUEST_METHOD} == 'OPTIONS' && req_novary('Origin') != ''  " CORSType=invalidpreflight CORSProcessing=false
		#SetEnvIfExpr "req_novary('Access-Control-Request-Method') != '' && %{REQUEST_METHOD} == 'OPTIONS' && req_novary('Origin') != ''  " CORSType=preflight CORSProcessing=true CORSTrusted=false
		SetEnvIfExpr "req_novary('Origin') -strcmatch 'https://%{HTTP_HOST}*'"  CORSType=samedomain CORSProcessing=false

		# For requests that require CORS processing, check if the Origin can be trusted
		SetEnvIfExpr "%{HTTP_HOST} =~ /(.*)/ " ParsedHost=$1

		################## Adapt the regex to match CORS origin for your environment
		SetEnvIfExpr "env('CORSProcessing') == 'true' && req_novary('Origin') =~ m#(https://.*.adobescreens.com(:\d+)?$)#" CORSTrusted=true

		SetEnvIfExpr "env('CORSProcessing') == 'true' && req_novary('Origin') =~ m#(https://.*.adobeaemcloud.com(:\d+)?$)#" CORSTrusted=true

		SetEnvIfExpr "env('CORSProcessing') == 'true' && req_novary('Origin') =~ m#(https://.*.github.io(:\d+)?$)#" CORSTrusted=true

		SetEnvIfExpr "env('CORSProcessing') == 'true' && req_novary('Origin') =~ m#(https://.*.hlx.page(:\d+)?$)#" CORSTrusted=true

		SetEnvIfExpr "env('CORSProcessing') == 'true' && req_novary('Origin') =~ m#(http://localhost(:\d+)?$)#" CORSTrusted=true

		# Extract the Origin header
		SetEnvIfNoCase ^Origin$ ^https://(.*)$ CORSTrustedOrigin=https://$1

		# Flush If already set
		Header unset Access-Control-Allow-Origin
		Header unset Access-Control-Allow-Credentials

		# Trusted
		Header always set Access-Control-Allow-Credentials "true" "expr=reqenv('CORSTrusted') == 'true'"
		Header always set Access-Control-Allow-Origin "%{CORSTrustedOrigin}e" "expr=reqenv('CORSTrusted') == 'true'"
		Header always set Access-Control-Allow-Methods "GET" "expr=reqenv('CORSTrusted') == 'true'"
		Header always set Access-Control-Max-Age 1800 "expr=reqenv('CORSTrusted') == 'true'"
		Header always set Access-Control-Allow-Headers "*" "expr=reqenv('CORSTrusted') == 'true'"

		# Non-CORS or Not Trusted
		Header unset Access-Control-Allow-Credentials "expr=reqenv('CORSProcessing') == 'false' || reqenv('CORSTrusted') == 'false'"
		Header unset Access-Control-Allow-Origin "expr=reqenv('CORSProcessing') == 'false' || reqenv('CORSTrusted') == 'false'"
		Header unset Access-Control-Allow-Methods "expr=reqenv('CORSProcessing') == 'false' || reqenv('CORSTrusted') == 'false'"
		Header unset Access-Control-Max-Age "expr=reqenv('CORSProcessing') == 'false' || reqenv('CORSTrusted') == 'false'"

		# Always vary on origin, even if its not there.
		Header merge Vary Origin

		# CORS - send 200 for CORS Options Request which are trusted
		RewriteCond expr "reqenv('CORSProcessing') == 'true' && reqenv('CORSTrusted') == 'true'"
		RewriteCond %{REQUEST_METHOD} =OPTIONS
		RewriteRule ^(.*)$ $1 [R=200,L]

		# CORS - send 204 for CORS requests which are not trusted
		RewriteCond expr "reqenv('CORSProcessing') == 'true' && reqenv('CORSTrusted') == 'false'"
		RewriteRule "^(.*)" - [R=204,L]

		################## End of the CORS specific configuration ##################
	</IfModule>


	<Directory />
		<IfModule disp_apache2.c>
			# Some items cache with the wrong mime type
			# Use this option to use the name to auto-detect mime types when cached improperly
			ModMimeUsePathInfo On
			# Use this option to avoid cache poisioning
			# Sling will return /content/image.jpg as well as /content/image.jpg/ but apache can't search /content/image.jpg/ as a file
			# Apache will treat that like a directory.  This assures the last slash is never stored in cache
			DirectorySlash Off
			# Enable the dispatcher file handler for apache to fetch files from AEM
			SetHandler dispatcher-handler
		</IfModule>
		Options FollowSymLinks
		AllowOverride None
		# Insert filter
		SetOutputFilter DEFLATE
		# Don't compress images
		SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png)$ no-gzip dont-vary
		# Prevent clickjacking
		Header always append X-Frame-Options SAMEORIGIN
	</Directory>
	<Directory "${DOCROOT}">
		AllowOverride None
		Require all granted
	</Directory>
	<IfModule disp_apache2.c>
		# Enabled to allow rewrites to take affect and not be ignored by the dispatcher module
		DispatcherUseProcessedURL	On
		# Default setting to allow all errors to come from the aem instance
		DispatcherPassError		0
	</IfModule>
	<IfModule mod_rewrite.c>
		RewriteEngine	on
		Include conf.d/rewrites/rewrite.rules

		# Rewrite index page internally, pass through (PT)
		RewriteRule "^(/?)$" "/index.html" [PT]
	</IfModule>

    # Content Services/Sling Model Exporter: Cache for 5min with background refresh 1h on browser and 12h on CDN to avoid MISS
    <LocationMatch "^/content/.*\.model\.json$">
       Header set Cache-Control "max-age=300,stale-while-revalidate=3600" "expr=%{REQUEST_STATUS} < 400"
       Header set Surrogate-Control "stale-while-revalidate=43200,stale-if-error=43200" "expr=%{REQUEST_STATUS} < 400"
       Header set Age 0
    </LocationMatch>
</VirtualHost>